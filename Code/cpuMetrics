# Connect to vCenter
Connect-VIServer -Server "your-vcenter.domain.local"

# Define how far back to collect (default: 30 days if boot time is older)
$defaultStart = (Get-Date).AddDays(-30)
$end = Get-Date

# Get all VMs
$vms = Get-VM

# Use parallel foreach for speed (PowerShell 7+ required)
$report = $vms | ForEach-Object -Parallel {
    $vm = $_

    # Try to get boot time
    try { $bootTime = (Get-VMGuest -VM $vm -ErrorAction SilentlyContinue).BootTime }
    catch { $bootTime = $null }
    if (-not $bootTime -or $bootTime -lt $defaultStart) { $bootTime = $defaultStart }

    # Collect summarized CPU metrics
    $metrics = Get-Stat -Entity $vm -Stat cpu.ready.summation,cpu.wait.summation,cpu.costop.summation `
        -Start $bootTime -Finish $using:end -IntervalMins 30 -MaxSamples 100 -ErrorAction SilentlyContinue

    if ($metrics) {
        $ready  = ($metrics | Where-Object {$_.MetricId -eq "cpu.ready.summation"} | Measure-Object -Property Value -Sum).Sum
        $wait   = ($metrics | Where-Object {$_.MetricId -eq "cpu.wait.summation"}  | Measure-Object -Property Value -Sum).Sum
        $costop = ($metrics | Where-Object {$_.MetricId -eq "cpu.costop.summation"} | Measure-Object -Property Value -Sum).Sum

        # Calculate % (approx. over collected period)
        $totalSamples = ($metrics | Group-Object -Property MetricId | Select-Object -First 1).Group.Count
        $totalTimeMs  = $totalSamples * 30 * 60 * 1000

        [PSCustomObject]@{
            VMName         = $vm.Name
            BootTime       = $bootTime
            CPUReady_ms    = [math]::Round($ready,2)
            CPUWait_ms     = [math]::Round($wait,2)
            CPUCoStop_ms   = [math]::Round($costop,2)
            CPUReady_pct   = if ($totalTimeMs -ne 0) {[math]::Round(($ready / $totalTimeMs) * 100, 2)} else {0}
            CPUWait_pct    = if ($totalTimeMs -ne 0) {[math]::Round(($wait / $totalTimeMs) * 100, 2)} else {0}
            CPUCoStop_pct  = if ($totalTimeMs -ne 0) {[math]::Round(($costop / $totalTimeMs) * 100, 2)} else {0}
        }
    }
} -ThrottleLimit 20  # Adjust this (15-30) based on vCenter load

# Export report
$report | Export-Csv "C:\VM_CPU_Contention_Summary.csv" -NoTypeInformation
Write-Host "âœ… Done! Results exported to C:\VM_CPU_Contention_Summary.csv"
